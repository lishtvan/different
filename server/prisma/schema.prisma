datasource db {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  providerId String    @unique
  name       String
  nickname   String?   @unique @db.VarChar(20)
  bio        String?
  avatarUrl  String?
  location   String?
  Sessions   Session[]
  Listings   Listing[]
  Chats      Chat[]
}

model Session {
  id     Int    @id @default(autoincrement())
  token  String @unique
  ip     String
  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int
}

enum ListingStatus {
  AVAILABLE
  SOLD
}

model Listing {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  price       Int
  cardNumber  String
  title       String
  size        String
  designer    String
  condition   String
  category    String
  description String?
  tags        String[]
  imageUrls   String[]
  User        User          @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  status      ListingStatus @default(AVAILABLE)
  userId      Int
}

model Message {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  Chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  chatId    Int
  text      String
  viewed    Boolean  @default(false)
  senderId  Int
}

model Chat {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  Users     User[]
  Messages  Message[]
}
